import { useAxiosPrivate } from "api";
import React, { useEffect, useState } from "react";
import { Link, useNavigate, useParams } from "react-router-dom";
import {
  ClassAssignment,
  FunctionalityAPIEndpoints,
  Role,
  Teacher,
} from "types";
import { axiosGet } from "../../helper-functions/axios";

// Generated by https://quicktype.io

export interface TeacherAllInfo {
  TEACHER_ID: number;
  EMPLOYEE_ID: number;
  PUBLIC_NAME: string;
  USERNAME: string;
  PHOTO_URL: string;
  PASSWORD: string;
  SUBJECTS: string;
  FIRSTNAME: string;
  LASTNAME: string;
  EMAIL: string;
  HIRED_AT: Date;
  ROLE: Role;
}

// Generated by https://quicktype.io

export interface ResAssignment {
  ASSIGNMENT_ID: number;
  TEACHER_ID: number;
  ASSIGNMENT_NAME: string;
  ASSIGNMENT_DESCRIPTION: null;
  GRADE_TYPE: string;
  SUBJECT: string;
  CLASS_ID: number;
  DEADLINE: string;
}

const TeacherViewPage = () => {
  const params = useParams<"id">();
  const navigate = useNavigate();
  const axios = useAxiosPrivate();
  const [teacher, setTeacher] = useState<TeacherAllInfo | null>(null);
  const [assignments, setAssignments] = useState<ResAssignment[] | null>(null);
  useEffect(() => {
    axios
      .get(
        FunctionalityAPIEndpoints.FUNCTIONALITY +
          "admin/app/teacher/" +
          params.id
      )
      .then(({ data: res }) => {
        setTeacher({
          ...res.teacher,
          HIRED_AT: new Date(res.HIRED_AT) || res.HIRED_AT,
        });
        setAssignments(res.assignments);
      })
      .catch((err) => console.log(err));
  }, []);

  if (!teacher) return <div>Loading...</div>;

  return (
    <section className="flex w-full h-full overflow-auto">
      <article className="w-full">
        <button onClick={() => navigate(-1)}>Go back</button>
        <img src={teacher.PHOTO_URL} className="w-96 h-96 rounded-2xl" />
        <h1>
          {teacher.FIRSTNAME} {teacher.LASTNAME}
        </h1>
        <p>{teacher.EMAIL}</p>
        <p>{teacher.HIRED_AT.toUTCString()}</p>
      </article>
      <article className="w-full">
        <h2>Teachers assignments</h2>
        {assignments &&
          assignments.map((assignment) => (
            <Link
              to={`/assignment/${assignment.ASSIGNMENT_ID}`}
              key={assignment.ASSIGNMENT_ID}
              className="flex p-4 bg-primary"
            >
              <h3>{assignment.ASSIGNMENT_NAME}</h3>
              <p>Class ID: #{assignment.CLASS_ID}</p>
            </Link>
          ))}
      </article>
    </section>
  );
};

export default TeacherViewPage;
